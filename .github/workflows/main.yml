name: CI-CD Build & Deploy with ArgoCD

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: latest

    - name: Terraform Init
      working-directory: terraform
      run: terraform init -input=false

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      working-directory: terraform
      run: terraform apply -auto-approve

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image to ECR
      env:
        ECR_REGISTRY: 929897439921.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: netflix-clone
        IMAGE_TAG: latest
      run: |
        cd app_code
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --name netflix-cluster --region us-east-1

    - name: Create ArgoCD namespace if not exists
      run: |
        kubectl get ns argocd || kubectl create ns argocd

    - name: Install ArgoCD
      run: |
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        echo "Waiting for ArgoCD to be ready..."
        kubectl rollout status deployment argocd-server -n argocd --timeout=180s

    - name: Deploy ArgoCD Application resource
      run: |
        kubectl apply -f argocd/netflix-clone-app.yaml -n argocd

    - name: Install ArgoCD CLI
      run: |
        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd

    - name: Login to ArgoCD
      run: |
        argocd login 52.91.70.212:30335 \
          --username admin \
          --password ${{ secrets.ARGOCD_PASSWORD }} \
          --insecure

    - name: Sync ArgoCD Application
      run: |
        argocd app sync netflix-clone --grpc-web
